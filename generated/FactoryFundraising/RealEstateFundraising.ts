// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class DeadlineExtended extends ethereum.Event {
  get params(): DeadlineExtended__Params {
    return new DeadlineExtended__Params(this);
  }
}

export class DeadlineExtended__Params {
  _event: DeadlineExtended;

  constructor(event: DeadlineExtended) {
    this._event = event;
  }

  get newDeadline(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EarlyComplete extends ethereum.Event {
  get params(): EarlyComplete__Params {
    return new EarlyComplete__Params(this);
  }
}

export class EarlyComplete__Params {
  _event: EarlyComplete;

  constructor(event: EarlyComplete) {
    this._event = event;
  }

  get totalRaised(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class FundraisingCompleted extends ethereum.Event {
  get params(): FundraisingCompleted__Params {
    return new FundraisingCompleted__Params(this);
  }
}

export class FundraisingCompleted__Params {
  _event: FundraisingCompleted;

  constructor(event: FundraisingCompleted) {
    this._event = event;
  }

  get totalRaised(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class GoalAmountUpdated extends ethereum.Event {
  get params(): GoalAmountUpdated__Params {
    return new GoalAmountUpdated__Params(this);
  }
}

export class GoalAmountUpdated__Params {
  _event: GoalAmountUpdated;

  constructor(event: GoalAmountUpdated) {
    this._event = event;
  }

  get newGoalAmount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class InvestmentMade extends ethereum.Event {
  get params(): InvestmentMade__Params {
    return new InvestmentMade__Params(this);
  }
}

export class InvestmentMade__Params {
  _event: InvestmentMade;

  constructor(event: InvestmentMade) {
    this._event = event;
  }

  get investor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class InvestmentWithdrawn extends ethereum.Event {
  get params(): InvestmentWithdrawn__Params {
    return new InvestmentWithdrawn__Params(this);
  }
}

export class InvestmentWithdrawn__Params {
  _event: InvestmentWithdrawn;

  constructor(event: InvestmentWithdrawn) {
    this._event = event;
  }

  get investor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PropertyTokenCreated extends ethereum.Event {
  get params(): PropertyTokenCreated__Params {
    return new PropertyTokenCreated__Params(this);
  }
}

export class PropertyTokenCreated__Params {
  _event: PropertyTokenCreated;

  constructor(event: PropertyTokenCreated) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TokensClaimed extends ethereum.Event {
  get params(): TokensClaimed__Params {
    return new TokensClaimed__Params(this);
  }
}

export class TokensClaimed__Params {
  _event: TokensClaimed;

  constructor(event: TokensClaimed) {
    this._event = event;
  }

  get investor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RealEstateFundraising__getInvestmentResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get claimed(): boolean {
    return this[1].toBoolean();
  }
}

export class RealEstateFundraising__investmentsResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getAmount(): BigInt {
    return this.value0;
  }

  getClaimed(): boolean {
    return this.value1;
  }
}

export class RealEstateFundraising__offerResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: boolean;
  value7: Address;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: boolean,
    value7: Address,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    return map;
  }

  getNftId(): BigInt {
    return this.value0;
  }

  getGoalAmount(): BigInt {
    return this.value1;
  }

  getMinInvestment(): BigInt {
    return this.value2;
  }

  getMaxInvestment(): BigInt {
    return this.value3;
  }

  getDeadline(): BigInt {
    return this.value4;
  }

  getTotalRaised(): BigInt {
    return this.value5;
  }

  getIsCompleted(): boolean {
    return this.value6;
  }

  getNftOwner(): Address {
    return this.value7;
  }
}

export class RealEstateFundraising extends ethereum.SmartContract {
  static bind(address: Address): RealEstateFundraising {
    return new RealEstateFundraising("RealEstateFundraising", address);
  }

  factoryToken(): Address {
    let result = super.call("factoryToken", "factoryToken():(address)", []);

    return result[0].toAddress();
  }

  try_factoryToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("factoryToken", "factoryToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getInvestment(
    investor: Address,
  ): RealEstateFundraising__getInvestmentResultValue0Struct {
    let result = super.call(
      "getInvestment",
      "getInvestment(address):((uint256,bool))",
      [ethereum.Value.fromAddress(investor)],
    );

    return changetype<RealEstateFundraising__getInvestmentResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getInvestment(
    investor: Address,
  ): ethereum.CallResult<RealEstateFundraising__getInvestmentResultValue0Struct> {
    let result = super.tryCall(
      "getInvestment",
      "getInvestment(address):((uint256,bool))",
      [ethereum.Value.fromAddress(investor)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<RealEstateFundraising__getInvestmentResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getRemainingTime(): BigInt {
    let result = super.call(
      "getRemainingTime",
      "getRemainingTime():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getRemainingTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRemainingTime",
      "getRemainingTime():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  investments(param0: Address): RealEstateFundraising__investmentsResult {
    let result = super.call(
      "investments",
      "investments(address):(uint256,bool)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new RealEstateFundraising__investmentsResult(
      result[0].toBigInt(),
      result[1].toBoolean(),
    );
  }

  try_investments(
    param0: Address,
  ): ethereum.CallResult<RealEstateFundraising__investmentsResult> {
    let result = super.tryCall(
      "investments",
      "investments(address):(uint256,bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RealEstateFundraising__investmentsResult(
        value[0].toBigInt(),
        value[1].toBoolean(),
      ),
    );
  }

  nft(): Address {
    let result = super.call("nft", "nft():(address)", []);

    return result[0].toAddress();
  }

  try_nft(): ethereum.CallResult<Address> {
    let result = super.tryCall("nft", "nft():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  offer(): RealEstateFundraising__offerResult {
    let result = super.call(
      "offer",
      "offer():(uint256,uint256,uint256,uint256,uint256,uint256,bool,address)",
      [],
    );

    return new RealEstateFundraising__offerResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBoolean(),
      result[7].toAddress(),
    );
  }

  try_offer(): ethereum.CallResult<RealEstateFundraising__offerResult> {
    let result = super.tryCall(
      "offer",
      "offer():(uint256,uint256,uint256,uint256,uint256,uint256,bool,address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RealEstateFundraising__offerResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBoolean(),
        value[7].toAddress(),
      ),
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  propertyToken(): Address {
    let result = super.call("propertyToken", "propertyToken():(address)", []);

    return result[0].toAddress();
  }

  try_propertyToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "propertyToken",
      "propertyToken():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  usdt(): Address {
    let result = super.call("usdt", "usdt():(address)", []);

    return result[0].toAddress();
  }

  try_usdt(): ethereum.CallResult<Address> {
    let result = super.tryCall("usdt", "usdt():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _factoryToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _usdt(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _nft(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _nftId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _goalAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _minInvestment(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _maxInvestment(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _durationDays(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[8].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptCurrentRaisedCall extends ethereum.Call {
  get inputs(): AcceptCurrentRaisedCall__Inputs {
    return new AcceptCurrentRaisedCall__Inputs(this);
  }

  get outputs(): AcceptCurrentRaisedCall__Outputs {
    return new AcceptCurrentRaisedCall__Outputs(this);
  }
}

export class AcceptCurrentRaisedCall__Inputs {
  _call: AcceptCurrentRaisedCall;

  constructor(call: AcceptCurrentRaisedCall) {
    this._call = call;
  }
}

export class AcceptCurrentRaisedCall__Outputs {
  _call: AcceptCurrentRaisedCall;

  constructor(call: AcceptCurrentRaisedCall) {
    this._call = call;
  }
}

export class ClaimTokensCall extends ethereum.Call {
  get inputs(): ClaimTokensCall__Inputs {
    return new ClaimTokensCall__Inputs(this);
  }

  get outputs(): ClaimTokensCall__Outputs {
    return new ClaimTokensCall__Outputs(this);
  }
}

export class ClaimTokensCall__Inputs {
  _call: ClaimTokensCall;

  constructor(call: ClaimTokensCall) {
    this._call = call;
  }
}

export class ClaimTokensCall__Outputs {
  _call: ClaimTokensCall;

  constructor(call: ClaimTokensCall) {
    this._call = call;
  }
}

export class ExtendDeadlineCall extends ethereum.Call {
  get inputs(): ExtendDeadlineCall__Inputs {
    return new ExtendDeadlineCall__Inputs(this);
  }

  get outputs(): ExtendDeadlineCall__Outputs {
    return new ExtendDeadlineCall__Outputs(this);
  }
}

export class ExtendDeadlineCall__Inputs {
  _call: ExtendDeadlineCall;

  constructor(call: ExtendDeadlineCall) {
    this._call = call;
  }

  get additionalDays(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExtendDeadlineCall__Outputs {
  _call: ExtendDeadlineCall;

  constructor(call: ExtendDeadlineCall) {
    this._call = call;
  }
}

export class InvestCall extends ethereum.Call {
  get inputs(): InvestCall__Inputs {
    return new InvestCall__Inputs(this);
  }

  get outputs(): InvestCall__Outputs {
    return new InvestCall__Outputs(this);
  }
}

export class InvestCall__Inputs {
  _call: InvestCall;

  constructor(call: InvestCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class InvestCall__Outputs {
  _call: InvestCall;

  constructor(call: InvestCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateGoalAmountCall extends ethereum.Call {
  get inputs(): UpdateGoalAmountCall__Inputs {
    return new UpdateGoalAmountCall__Inputs(this);
  }

  get outputs(): UpdateGoalAmountCall__Outputs {
    return new UpdateGoalAmountCall__Outputs(this);
  }
}

export class UpdateGoalAmountCall__Inputs {
  _call: UpdateGoalAmountCall;

  constructor(call: UpdateGoalAmountCall) {
    this._call = call;
  }

  get newGoalAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateGoalAmountCall__Outputs {
  _call: UpdateGoalAmountCall;

  constructor(call: UpdateGoalAmountCall) {
    this._call = call;
  }
}

export class WithdrawInvestmentCall extends ethereum.Call {
  get inputs(): WithdrawInvestmentCall__Inputs {
    return new WithdrawInvestmentCall__Inputs(this);
  }

  get outputs(): WithdrawInvestmentCall__Outputs {
    return new WithdrawInvestmentCall__Outputs(this);
  }
}

export class WithdrawInvestmentCall__Inputs {
  _call: WithdrawInvestmentCall;

  constructor(call: WithdrawInvestmentCall) {
    this._call = call;
  }
}

export class WithdrawInvestmentCall__Outputs {
  _call: WithdrawInvestmentCall;

  constructor(call: WithdrawInvestmentCall) {
    this._call = call;
  }
}

export class WithdrawPartialCall extends ethereum.Call {
  get inputs(): WithdrawPartialCall__Inputs {
    return new WithdrawPartialCall__Inputs(this);
  }

  get outputs(): WithdrawPartialCall__Outputs {
    return new WithdrawPartialCall__Outputs(this);
  }
}

export class WithdrawPartialCall__Inputs {
  _call: WithdrawPartialCall;

  constructor(call: WithdrawPartialCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawPartialCall__Outputs {
  _call: WithdrawPartialCall;

  constructor(call: WithdrawPartialCall) {
    this._call = call;
  }
}
